"""fixed migration

Revision ID: 6b90ff4d5430
Revises: 
Create Date: 2020-06-08 13:26:05.740089

"""
from alembic import op
import sqlalchemy as sa
import os
import json

# revision identifiers, used by Alembic.
revision = '6b90ff4d5430'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    airports = op.create_table('airports',
                               sa.Column('id', sa.Integer(), nullable=False),
                               sa.Column('x_coord', sa.Float(),
                                         nullable=False),
                               sa.Column('y_coord', sa.Float(),
                                         nullable=False),
                               sa.Column('name', sa.String(
                                   length=100), nullable=True),
                               sa.Column('city', sa.String(
                                   length=100), nullable=True),
                               sa.Column('state', sa.String(
                                   length=5), nullable=True),
                               sa.Column('loc_id', sa.String(
                                   length=10), nullable=True),
                               sa.Column('manager_name', sa.String(
                                   length=100), nullable=True),
                               sa.Column('manager_phone_number', sa.String(
                                   length=20), nullable=True),
                               sa.Column('fss_phone_number', sa.String(
                                   length=20), nullable=True),
                               sa.Column('sectional_chart', sa.String(
                                   length=50), nullable=True),
                               sa.Column('elevation', sa.Integer(),
                                         nullable=True),
                               sa.Column('pattern_altitude',
                                         sa.Float(), nullable=True),
                               sa.Column('fuel_types', sa.String(),
                                         nullable=True),
                               sa.Column('atc_tower', sa.Boolean(),
                                         nullable=True),
                               sa.Column('ctaf', sa.Float(), nullable=True),
                               sa.Column('landing_fee', sa.Boolean(),
                                         nullable=True),
                               sa.PrimaryKeyConstraint('id')
                               )
    op.create_table('users',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('email', sa.String(), nullable=True),
                    sa.Column('nickname', sa.String(), nullable=True),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('airplanes',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.Column('fuel_load', sa.Float(), nullable=True),
                    sa.Column('fuel_comsumption', sa.Float(), nullable=True),
                    sa.Column('speed', sa.Float(), nullable=True),
                    sa.Column('start_taxi_takeoff_fuel_use',
                              sa.Float(), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('flight_plans',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.Integer(), nullable=True),
                    sa.Column('start_date', sa.Date(), nullable=True),
                    sa.Column('end_date', sa.Date(), nullable=True),
                    sa.Column('route', sa.ARRAY(sa.Integer()), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###
    this_folder = os.path.dirname(__file__)
    the_file = os.path.join(this_folder, '../../test_json/test_json.txt')
    abs_path = os.path.abspath(os.path.realpath(the_file))
    print(abs_path)

    f = open(abs_path, 'r')
    jsonData = f.read()
    print(jsonData)

    parsed = json.loads(jsonData)

    print(parsed)
    i = 1
    airports_list = []
    for airport in parsed["features"]:
        current_airport = {}
        current_airport["id"] = i
        current_airport["x_coord"] = airport['geometry']['x']
        current_airport["y_coord"] = airport['geometry']['y']
        current_airport["name"] = airport['attributes']['Fac_Name']
        current_airport["city"] = airport['attributes']['City']
        current_airport["state"] = airport['attributes']['State_Post_Office_Code']
        current_airport["loc_id"] = airport['attributes']['Loc_Id']
        current_airport["manager_name"] = airport['attributes']['Manager_Name']
        current_airport["manager_phone_number"] = airport['attributes']['Manager_Phone']
        current_airport["fss_phone_number"] = airport['attributes']['Local_Phone_Airport_To_Fss']
        current_airport["sectional_chart"] = airport['attributes']['Sectional_Chart']
        current_airport["elevation"] = airport['attributes']['Elevation']
        current_airport["pattern_altitude"] = airport['attributes']['Pattern_Altitude']
        current_airport["fuel_types"] = airport['attributes']['Fuel_Types']
        atc_tower = airport['attributes']['Atc_Tower']
        current_airport["atc_tower"] = (
            False, True)[atc_tower and atc_tower == 'Y']
        current_airport["ctaf"] = airport['attributes']['Ctaf']
        landing_fee = airport['attributes']['Landing_Fee']
        current_airport["landing_fee"] = (
            False, True)[landing_fee == 'Y']
        airports_list.append(current_airport)
        i += 1
    # airports_list = read_func()
    op.bulk_insert(airports, airports_list)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('flight_plans')
    op.drop_table('airplanes')
    op.drop_table('users')
    op.drop_table('airports')
    # ### end Alembic commands ###
